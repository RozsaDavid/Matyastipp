@page "/registration"

@using FrontEnd.ViewModel
@using System.Security.Cryptography
@using System.Text

@inject HttpClient httpClient
@inject NavigationManager navigationManager

<PageTitle>Regisztráció</PageTitle>

<div class="row">
    <div class="registration-form-container">
        <h3>Regisztráció</h3>
        <div class="registration-form">
            <EditForm Model="newUser" OnValidSubmit="AddUser" FormName="CreateUser" Enhance>
                <DataAnnotationsValidator />
                <div class="mb-3">
                    <label for="username" class="form-label">Felhasználónév</label>
                    <InputText id="username" @bind-Value="newUser.Username" class="form-control" />
                </div>

                <div class="mb-3">
                    <label for="realname" class="form-label">Valós név</label>
                    <InputText id="realname" @bind-Value="newUser.RealName" class="form-control" />
                </div>

                <div class="mb-3">
                    <label for="email" class="form-label">E-mail</label>
                    <InputText id="email" @bind-Value="newUser.Email" class="form-control" />
                    <div class="error-message">
                        <ValidationMessage For="()=>newUser.Email"/>
                    </div>
                    
                </div>

                <div class="mb-3">
                    <label for="password" class="form-label">Jelszó</label>
                    <InputText type="password" id="password" @bind-Value="newUser.Password" class="form-control" />
                    <div class="error-message">
                        <ValidationMessage For="()=>newUser.Password"/>
                    </div>
                </div>

                <div class="mb-3 text-center error-message">
                    @errorMessage
                </div>

                <button type="submit" class="btn btn-success md-4">Mentés</button>
            </EditForm>
            <a href="/" class="btn btn-primary">Vissza</a>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private UserVM newUser { get; set; } = new();

    private string errorMessage;

    private async Task AddUser() {
        if(newUser.Password == string.Empty || newUser.Username == string.Empty
            || newUser.Email == string.Empty || newUser.RealName == string.Empty) {
            errorMessage = "Minden mezőt ki kell tölteni!";
            return;
        }

        //jelszó hashelése
        var source = Encoding.UTF8.GetBytes(newUser.Password);
        var hashBytes = MD5.Create().ComputeHash(source);
        newUser.Password = BitConverter.ToString(hashBytes).Replace("-", "");

        try {
            var response = await httpClient.PostAsJsonAsync("api/user/registration", newUser);
            newUser.Password = string.Empty;

            if (response.IsSuccessStatusCode) {
                navigationManager.NavigateTo("/");
            } else {
                errorMessage = await response.Content.ReadAsStringAsync();
                errorMessage = errorMessage.Replace("\"", string.Empty);
            }
        } catch (NavigationException navEx) {
            navigationManager.NavigateTo("/");
        } catch(Exception ex) {
            navigationManager.NavigateTo("/apierror");
        }
        
    }
}
