@page "/signUp"

@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Authentication.Cookies
@using FrontEnd.ViewModel

@attribute [Authorize]

@inject HttpClient httpClient
@inject NavigationManager navigationManager

<div class="text-container">
    <h3>Nevezés...</h3>

    <div class="mb-3 text-center error-message">
        @errorMessage
    </div>
</div>

@code {
    [CascadingParameter]
    public HttpContext httpContext { get; set; }

    [SupplyParameterFromQuery]
    private string contestId { get; set; }

    [SupplyParameterFromQuery]
    private string prevPage { get; set; }

    private string errorMessage;

    protected override async Task OnInitializedAsync() {
        string accessToken = httpContext.User.FindFirstValue("token");
        string userId = httpContext.User.FindFirstValue("id");

        httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
        httpClient.DefaultRequestHeaders.Add("Accept", "application/json");

        string[] signOnData = { userId.ToString(), contestId.ToString() };

        try {
            var response = await httpClient.PostAsJsonAsync("api/contest/signContest", signOnData);

            if(response.IsSuccessStatusCode) {
                navigationManager.NavigateTo($"{prevPage}");
            } else {
                errorMessage = await response.Content.ReadAsStringAsync();
            }
        } catch(NavigationException navEx) {
            navigationManager.NavigateTo($"{prevPage}");
        } catch(Exception ex) {
            navigationManager.NavigateTo("/apierror");
        }

    }
}
