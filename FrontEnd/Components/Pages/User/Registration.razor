@page "/registration"

@using FrontEnd.ViewModel
@using System.Security.Cryptography
@using System.Text

@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Regisztráció</h3>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="newUser" OnValidSubmit="AddUser" FormName="CreateUser" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="username" class="form-label">Felhasználónév</label>
                <InputText id="username" @bind-Value="newUser.Username" class="form-control" />
                <ValidationMessage For="()=>newUser.Username" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="realname" class="form-label">Valós név</label>
                <InputText id="realname" @bind-Value="newUser.RealName" class="form-control" />
                <ValidationMessage For="()=>newUser.RealName" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">E-mail</label>
                <InputText id="email" @bind-Value="newUser.Email" class="form-control" />
                <ValidationMessage For="()=>newUser.Email" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Jelszó</label>
                <InputText id="password" @bind-Value="newUser.Password" class="form-control" />
                <ValidationMessage For="()=>newUser.Password" class="text-danger" />
            </div>

            <div class="mb-3 text-center">
                <span class="text-danger">@errorMessage</span>
            </div>

            <button type="submit" class="btn btn-primary md-4">Save</button>
            <a href="/" class="btn btn-success">Back</a>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public UserVM newUser { get; set; } = new();

    List<UserVM> usersList = new();

    public string? errorMessage;

    private async Task AddUser() {
        if(newUser.Password == string.Empty) {
            errorMessage = "Hibás jelszó!";
            return;
        }

        var source = Encoding.UTF8.GetBytes(newUser.Password);
        var hashBytes = MD5.Create().ComputeHash(source);
        newUser.Password = BitConverter.ToString(hashBytes).Replace("-", "");

        var response = await httpClient.PostAsJsonAsync("api/user/registration", newUser);
        newUser.Password = string.Empty;

        if(response.IsSuccessStatusCode) {
            navigationManager.NavigateTo("/");
        } else {
            errorMessage = await response.Content.ReadAsStringAsync();
        }
    }
}
