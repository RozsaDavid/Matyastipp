@page "/changedUsername"

@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

@inject HttpClient httpClient
@inject NavigationManager navigationManager

<PageTitle>Betöltés...</PageTitle>

<h3>Betöltés...</h3>

@code {
    [CascadingParameter]
    public HttpContext httpContext { get; set; }

    [SupplyParameterFromQuery]
    private string actualUsername { get; set; }

    [SupplyParameterFromQuery]
    private string accessToken { get; set; }

    [SupplyParameterFromQuery]
    private string userId { get; set; }

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        
        //Kijelentkezés
        if(httpContext.User.Identity.IsAuthenticated) {
            await httpContext.SignOutAsync();
        }

        //Új adatok létrehozása a megváltoztatott felhasználóhoz
        var claims = new List<Claim>{
                new Claim(ClaimTypes.Name, actualUsername),
                new Claim("token", accessToken),
                new Claim("id", userId)
            };

        ClaimsIdentity identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        ClaimsPrincipal principal = new ClaimsPrincipal(identity);

        //Bejelentkezés
        await httpContext.SignInAsync(principal);

        navigationManager.NavigateTo("/");
    }

}
